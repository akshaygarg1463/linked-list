#include <bits/stdc++.h>
using namespace std;
class node{
public:
int data;
node* next;
node(){
  this->data=0;
  this->next=NULL;
}
node(int data){
  this->data=data;
  this->next=NULL;
}
};
node*reversell(node*&head){
    if(head==NULL)
  {
   return NULL;
}
  node*prev=NULL;
  node*curr=head;
  node*forward=curr->next;
  while(curr!=NULL){
    forward=curr->next;
    curr->next=prev;
    prev=curr;
    curr=forward;
  }
  return prev;
}
void print(node*&head){
  node*temp=head;
  while(temp!=NULL){
    cout<<temp->data<<" ";
    temp=temp->next;
  } }

bool checkpalindrom(node*&head){
   if(head==NULL){
   return true;
    }
  if(head->next==NULL){
    return true;
  }
  node*slow=head;
  node*fast=head->next;
  while(fast!=NULL){
    fast=fast->next;
    if(fast!=NULL){
      fast=fast->next;
      slow=slow->next;
    }
  }
  node*reverseafterslow=reversell(slow->next);
  slow->next=reverseafterslow;
  node*temp1=head;
  node*temp2=reverseafterslow;
  while(temp2!=NULL){
    if(temp1->data!=temp2->data){
      return false;
    }
    else{
      temp1=temp1->next;
      temp2=temp2->next;
    } 
  }
  return true;
}
int main() {
   node*head=new node(5);
   node*second=new node(10);
  node*third=new node(1);
  node*forth=new node(10);
  node*fifth=new node(5);
   head->next=second;
  second->next=third;
  third->next=forth;
  forth->next=fifth;
bool palindrom  = checkpalindrom(head);
  if(palindrom){
    cout<<"palindrom";
  }
  else{
     cout<<"not palindrom";
  }
}
